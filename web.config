<?xml version="1.0" encoding="utf-8"?>
<!--
     This configuration file is required if iisnode is used to run node processes behind
     IIS or IIS Express.  For more information, visit:

     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->

<configuration>
  <system.webServer>
    <!-- Visit http://blogs.msdn.com/b/windowsazure/archive/2013/11/14/introduction-to-websockets-on-windows-azure-web-sites.aspx for more information on WebSocket support -->
    <webSocket enabled="false" />
    <handlers>
      <!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module -->
      <add name="iisnode" path="bin/www" verb="*" modules="iisnode"/>
    </handlers>
    <rewrite>
      <rules>
        <!-- Do not interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^bin/www\/debug[\/]?" />
        </rule>

        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{PATH_INFO}"/>
        </rule>

        <!-- All other URLs are mapped to the node.js site entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="bin/www"/>
        </rule>
      </rules>
    </rewrite>
    
    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <security>
      <requestFiltering removeServerHeader="true">
          <verbs allowUnlisted="true">
            <add verb="OPTIONS" allowed="false" />
          </verbs>
          <hiddenSegments>
          <remove segment="bin"/>
          </hiddenSegments>
      </requestFiltering>
    </security>

            
        
    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />

    <!--usw2.pure.cloud
      You can control how Node is hosted within IIS using the following options:
        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
        * node_env: will be propagated to node as NODE_ENV environment variable
        * debuggingEnabled - controls whether the built-in debugger is enabled

      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
    -->
    <!--<iisnode watchedFiles="web.config;*.js"/>-->
    <httpProtocol>
        <customHeaders>
        <remove name="X-Powered-By" />
        <add name="X-Frame-Options" value="SAMEORIGIN" /> 
        <!--<X-Frame-Options: ALLOW-FROM https://qa-genesysccapps.accenture.com />
        <add name="X-Frame-Options:ALLOW-FROM https://apps.mypurecloud.com"/>  -->
        <add name="Access-Control-Request-Headers" value="Origin, X-Requested-With, Content-Type, Accept, Authorization" />
        <add name="Access-Control-Allow-Headers" value="Content-Type,cache-control" />
        <add name="Access-Control-Allow-Origin" value="http://localhost:3001/" />
        <add name="Strict-Transport-Security" value="max-age=31536000; includeSubDomains" />
        <add name="X-Xss-Protection" value="1; mode=block" />
        <add name="X-Content-Type-Options" value="nosniff" />
   
        <add name="Content-Security-Policy" value="frame-ancestors 'self' https://apps.usw2.pure.cloud;default-src 'self' *.accenture.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' streaming.usw2.pure.cloud cdn.jsdelivr.net code.jquery.com use.fontawesome.com sdk-cdn.mypurecloud.com stackpath.bootstrapcdn.com cdnjs.cloudflare.com apps.usw2.pure.cloud ajax.googleapis.com *.usw2.pure.cloud api.usw2.pure.cloud *zscalerthree.net; style-src * 'self' 'unsafe-inline' 'unsafe-hashes' cdn.jsdelivr.net code.jquery.com jqueryui.com cdnjs.cloudflare.com fonts.googleapis.com apps.usw2.pure.cloud; img-src 'self' data: *.accenture.com; font-src 'self' data: fonts.googleapis.com cdnjs.cloudflare.com fonts.gstatic.com apps.usw2.pure.cloud *.accenture.com; connect-src 'self' wss://*.usw2.pure.cloud *.usw2.pure.cloud *.accenture.com; object-src 'self' 'unsafe-inline' 'unsafe-eval' *.accenture.com; frame-src 'self' *.accenture.com data:; upgrade-insecure-requests; block-all-mixed-content" />
        
        <!-- <add name="Content-Security-Policy" value="frame-ancestors 'self' https://apps.mypurecloud.com;default-src 'self' *.accenture.com 'self' https://apps.apne2.pure.cloud;default-src; script-src 'self' 'unsafe-inline' 'unsafe-eval' streaming.mypurecloud.com streaming.apne2.pure.cloud cdn.jsdelivr.net code.jquery.com cdnjs.cloudflare.com apps.mypurecloud.com apps.apne2.pure.cloud ajax.googleapis.com *.mypurecloud.com api.mypurecloud.com *.apne2.pure.cloud api.apne2.pure.cloud *zscalerthree.net; style-src * 'self' 'unsafe-inline' 'unsafe-hashes' cdn.jsdelivr.net code.jquery.com jqueryui.com cdnjs.cloudflare.com fonts.googleapis.com apps.mypurecloud.com apps.apne2.pure.cloud; img-src 'self' data: *.accenture.com; font-src 'self' data: fonts.googleapis.com cdnjs.cloudflare.com fonts.gstatic.com apps.mypurecloud.com apps.apne2.pure.cloud *.accenture.com; connect-src 'self' wss://*.mypurecloud.com *.mypurecloud.com  wss://*.apne2.pure.cloud *.apne2.pure.cloud *.accenture.com; object-src 'self' 'unsafe-inline' 'unsafe-eval' *.accenture.com; frame-src 'self' *.accenture.com data:; upgrade-insecure-requests; block-all-mixed-content" /> -->
        <!--<add name="Content-Security-Policy" value="default-src 'self' *.accenture.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' streaming.mypurecloud.com cdn.jsdelivr.net code.jquery.com cdnjs.cloudflare.com apps.mypurecloud.com ajax.googleapis.com api.mypurecloud.com; style-src * 'self' 'unsafe-inline' 'unsafe-hashes' cdn.jsdelivr.net code.jquery.com jqueryui.com cdnjs.cloudflare.com fonts.googleapis.com apps.mypurecloud.com; img-src 'self' data: *.accenture.com; font-src 'self' data: fonts.googleapis.com cdnjs.cloudflare.com fonts.gstatic.com apps.mypurecloud.com *.accenture.com; connect-src 'self' wss://*.mypurecloud.com *.mypurecloud.com *.accenture.com; object-src 'self' 'unsafe-inline' 'unsafe-eval' *.accenture.com; frame-src 'self' *.accenture.com data:; upgrade-insecure-requests; block-all-mixed-content" /> -->
        <add name="Cache-Control" value="no-store" />
        <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
        </customHeaders>
        </httpProtocol>
  </system.webServer>
</configuration>




<!-- <add name="Content-Security-Policy" value="frame-ancestors 'self' https://apps.usw2.pure.cloud;default-src 'self' *.accenture.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' streaming.usw2.pure.cloud cdn.jsdelivr.net code.jquery.com use.fontawesome.com sdk-cdn.mypurecloud.com stackpath.bootstrapcdn.com cdnjs.cloudflare.com apps.usw2.pure.cloud ajax.googleapis.com *.usw2.pure.cloud api.usw2.pure.cloud *zscalerthree.net; style-src * 'self' 'unsafe-inline' 'unsafe-hashes' cdn.jsdelivr.net code.jquery.com jqueryui.com cdnjs.cloudflare.com fonts.googleapis.com apps.usw2.pure.cloud; img-src 'self' data: *.accenture.com; font-src 'self' data: fonts.googleapis.com cdnjs.cloudflare.com fonts.gstatic.com apps.usw2.pure.cloud *.accenture.com; connect-src 'self' wss://*.usw2.pure.cloud *.usw2.pure.cloud *.accenture.com; object-src 'self' 'unsafe-inline' 'unsafe-eval' *.accenture.com; frame-src 'self' *.accenture.com data:; upgrade-insecure-requests; block-all-mixed-content" /> -->